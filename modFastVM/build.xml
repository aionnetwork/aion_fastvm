<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="clean_build" name="fastvm">
    <property name="workspace" value="."/>
    <property name="dependencies" value="../lib"/>
    <property name="source" value="${workspace}/src"/>
    <property name="test" value="${workspace}/test"/>
    <property name="build-dir" value="${workspace}/build"/>
    <property name="built-sources" value="${build-dir}/main"/>
    <property name="built-tests" value="${build-dir}/test"/>
    <property name="test-contracts" value="${test}/org/aion/contract"/>
    <property name="built-contracts" value="${built-tests}/org/aion/contract"/>
    <property name="test-reports" value="${workspace}/reports"/>
    <property name="built-jar" value="${workspace}/dist"/>

    <path id="test-dependencies">
        <pathelement location="${dependencies}/aion-types-d6eb8f7.jar"/>
        <pathelement location="${dependencies}/junit-4.12.jar"/>
        <pathelement location="${dependencies}/hamcrest-core-1.3.jar"/>
        <pathelement location="${dependencies}/mockito-core-2.21.0.jar"/>
        <pathelement location="${dependencies}/byte-buddy-1.8.17.jar"/>
        <pathelement location="${dependencies}/objenesis-2.6.jar"/>
        <pathelement location="${dependencies}/commons-lang3-3.4.jar"/>
        <pathelement location="${dependencies}/commons-collections4-4.0.jar"/>
        <pathelement location="${dependencies}/json-20180813.jar"/>
    </path>

    <target name="clean_build" depends="clean, build"/>

    <target name="build">
        <mkdir dir="${built-sources}"/>
        <javac debug="true" debuglevel="source,lines,vars" includeantruntime="false" release="10" srcdir="${source}" destdir="${built-sources}" includes="**/*.java,module-info.java">
            <modulepath>
                <pathelement location="${dependencies}/aion-types-d6eb8f7.jar"/>
                <pathelement location="${dependencies}/slf4j-api-1.7.25.jar"/>
                <pathelement location="${dependencies}/commons-lang3-3.4.jar"/>
                <pathelement location="${dependencies}/commons-collections4-4.0.jar"/>
                <pathelement location="${dependencies}/json-20180813.jar"/>
            </modulepath>
        </javac>

        <exec executable="git" outputproperty="git.revision" failifexecutionfails="true">
            <arg value="describe"/>
            <arg value="--always"/>
            <arg value="HEAD"/>
        </exec>

        <jar destfile="${built-sources}/fastvm-${git.revision}.jar" filesetmanifest="mergewithoutmain" basedir="${built-sources}"/>

        <move includeemptydirs="false" todir="${built-jar}">
            <file file="${built-sources}/fastvm-${git.revision}.jar"/>
        </move>

        <echo message=" "/>
        <echo message="Newly built jar can be found at: ${built-jar}/fastvm-${git.revision}.jar"/>
    </target>

    <target name="test" depends="test_build">
        <mkdir dir="${test-reports}"/>
        <junit printsummary="on" haltonfailure="true" fork="true" dir="${workspace}">
            <classpath>
                <pathelement location="${built-sources}"/>
                <pathelement location="${built-tests}"/>
                <path refid="test-dependencies"/>
            </classpath>
            <formatter type="plain" usefile="false"/>
            <formatter type="xml"/>
            <batchtest todir="${test-reports}">
                <fileset dir="${test}" includes="**/*Test.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="test_build" depends="clean_build">
        <mkdir dir="${built-tests}"/>

        <javac debug="true" debuglevel="source,lines,vars" includeantruntime="false" release="10" srcdir="${test}" destdir="${built-tests}" includes="**/*.java,module-info.java">
            <classpath>
                <pathelement location="${built-sources}"/>
                <path refid="test-dependencies"/>
            </classpath>
        </javac>

        <copy todir="${built-contracts}">
            <fileset dir="${test-contracts}" includes="*.sol,contracts.zip"/>
        </copy>
    </target>

    <target name="clean">
        <delete dir="${build-dir}"/>
        <delete dir="${built-jar}"/>
        <delete dir="${test-reports}"/>
    </target>
</project>
